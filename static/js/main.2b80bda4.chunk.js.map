{"version":3,"sources":["quiz/html.js","quiz/cpp.js","Question.js","Welcome.js","Result.js","App.js","serviceWorker.js","index.js"],"names":["question","option1","option2","option3","option4","answer","Question","props","className","item","onClick","checkAnswer","option","Welcome","startquiz","href","target","Result","score","reset","App","quizname","setState","start","quiz","html","cpp","ind","myoption","state","i","index","submit","next","nextQuestion","showresult","finish","this","id","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2b80bda4.chunk.js","sourcesContent":["export default [\n\t{\n\t\tquestion:\"What is the current version of html?\",\n\t\toption1:\"3\",\n\t\toption2:\"5\",\n\t\toption3:\"1\",\n\t\toption4:\"8\",\n\t\tanswer:1\t\t\n\t},\n\t{\n\t\tquestion:\"HTML is a ?\",\n\t\toption1:\"Front End Language\",\n\t\toption2:\"Back End Language\",\n\t\toption3:\"Both\",\n\t\toption4:\"None of These\",\n\t\tanswer:0\t\n\t},\n\t{\n\t\tquestion:\"What does HTML stand for?\",\n\t\toption1:\"Hyper Text Markup Language\",\n\t\toption2:\"Home Tool Markup Language\",\n\t\toption3:\"Hyperlinks and Text Markup Language\",\n\t\toption4:\"Hyper Total Marks Language\"\t,\n\t\tanswer:0\t\n\t},\n\t{\n\t\tquestion:\"Choose the correct HTML element for the largest heading?\",\n\t\toption1:\"<h6>\",\n\t\toption2:\"<h2>\",\n\t\toption3:\"<h1>\",\n\t\toption4:\"<h5>\",\n\t\tanswer:2\t\t\n\t},\n\t{\n\t\tquestion:\"What is the correct HTML element for inserting a line break?\",\n\t\toption1:\"<line>\",\n\t\toption2:\"<bt>\",\n\t\toption3:\"<wbr>\",\n\t\toption4:\"<br>\",\n\t\tanswer:3\t\t\n\t}\n];","export default [\n\t{\n\t\tquestion:\"A member function can always access the data in __________ , (in C++).\",\n\t\toption1:\"the class of which it is member\",\n\t\toption2:\"the object of which it is a member\",\n\t\toption3:\"the public part of its class\",\n\t\toption4:\"the private part of its class\",\n\t\tanswer:0\t\t\n\t},\n\t{\n\t\tquestion:\"Which of the following is not correct for virtual function in C++ ?\",\n\t\toption1:\"Must be declared in public section of class\",\n\t\toption2:\"Virtual function can be static\",\n\t\toption3:\"Virtual function should be accessed using pointers.\",\n\t\toption4:\"Virtual function is defined in base class.\",\n\t\tanswer:1\t\n\t},\n\t{\n\t\tquestion:\"Which of the following cannot be passed to a function in C++ ?\",\n\t\toption1:\"Constant\",\n\t\toption2:\"Structure\",\n\t\toption3:\"Array\",\n\t\toption4:\"Header file\"\t,\n\t\tanswer:3\t\n\t},\n\t{\n\t\tquestion:\"Which of the following is not a correct statement?\",\n\t\toption1:\"Every class containing abstract method must be declared abstract\",\n\t\toption2:\"Abstract class can directly be initiated with ‘new’ operator.\",\n\t\toption3:\"Abstract class can be initiated\",\n\t\toption4:\"Abstract class does not contain any definition of implementation.\",\n\t\tanswer:1\t\t\n\t},\n\t{\n\t\tquestion:\"Which of the following, in C++, is inherited in a derived class from base class ?\",\n\t\toption1:\"constructor\",\n\t\toption2:\"destructor\",\n\t\toption3:\"data members\",\n\t\toption4:\"virtual methods\",\n\t\tanswer:2\t\t\n\t}\n];","import React from 'react';\n\nconst Question = (props)=>{\n\treturn(\n\t\t\t<div className=\"card card-width mt-5\">\n\t\t\t  <div className=\"card-header bg-primary text-white\">\n\t\t\t    <h3>{props.item.question}</h3>\n\t\t\t  </div>\n\t\t\t  <div className=\"card-body\">\n\t\t        <button onClick={()=>props.checkAnswer(props.item.answer,0)}  className={props.option[0]}>{props.item.option1}</button>\n\t\t        <button onClick={()=>props.checkAnswer(props.item.answer,1)}  className={props.option[1]}>{props.item.option2}</button>\n\t\t        <button onClick={()=>props.checkAnswer(props.item.answer,2)}  className={props.option[2]}>{props.item.option3}</button>\n\t\t        <button onClick={()=>props.checkAnswer(props.item.answer,3)}  className={props.option[3]}>{props.item.option4}</button>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t);\n}\n\nexport default Question;","import React from 'react';\n\nconst Welcome = (props)=>{\n\treturn(\n\t\t<div>\n              <button className=\"btnquiz btn btn-success\" onClick={()=>props.startquiz(\"cpp\")}>C++ Quiz</button>\n              <button className=\"btnquiz btn btn-success\" onClick={()=>props.startquiz(\"html\")}>HTML Quiz</button>\n              <a href=\"https://www.geeksforgeeks.org/c-plus-plus-gq/class-and-object-gq/\" className=\"btn btn-warning mt-5 d-block w-50\" target=\"_blank\">Questions From GeeksForGeeks</a>        \n        </div>\n\t\t);\n}\n\nexport default Welcome;","import React from 'react';\n\nconst Result = (props)=>{\n\treturn(\n\t\t\t\t<div>\n                  <h1>You got {props.score} out of 5</h1>\n                  <button className=\"nextbtn btn btn-primary\" onClick={props.reset}>Menu</button>\n              </div>\t\t);\n}\n\nexport default Result;","import React,{Component} from 'react';\nimport './App.css';\nimport html from \"./quiz/html.js\";\nimport cpp from \"./quiz/cpp.js\";\nimport Question from \"./Question.js\";\nimport Welcome from \"./Welcome.js\";\nimport Result from \"./Result.js\";\n\nclass App extends Component{\n\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      start:false,\n      quiz:null,\n      index:0,\n      option:[null,null,null,null],\n      next:false,\n      submit:false,\n      score:0,\n      finish:false\n    };\n  }\n\n  startquiz = (quizname)=>{\n    if(quizname===\"html\")\n      this.setState({start:true,quiz:html});\n    else\n      this.setState({start:true,quiz:cpp});\n  }\n\n  checkAnswer = (answer,ind)=>{\n    const myoption=[null,null,null,null];\n    if(answer===ind)\n    {\n        myoption[ind]=\"green\";\n        this.setState({score:this.state.score+1});\n    }\n    else\n    {\n      for(var i=0;i<4;i++)\n      {\n        if(i===answer)\n        {\n          myoption[i]=\"green\";\n        }\n        else\n          myoption[i]=\"red\";\n      }\n    }\n    if(this.state.index===4)\n    {\n        this.setState({\n          option:myoption,\n          submit:true\n        });      \n    }\n    else\n    {\n        this.setState({\n          option:myoption,\n          next:true\n        });            \n    }\n  }\n\n  nextQuestion = ()=>{\n    this.setState({\n      next:false,\n      index:this.state.index+1,\n      option:[null,null,null,null]\n    });\n  }\n\n  showresult = ()=>{\n      this.setState({\n      quiz:null,\n      index:0,\n      option:[null,null,null,null],\n      next:false,\n      submit:false,\n      finish:true\n    });\n\n  }\n\n  reset = ()=>{\n    this.setState({\n      finish:false,\n      start:false,\n      score:0\n    });\n  }\n  render()\n  {\n    const quiz = this.state.quiz;\n    const index = this.state.index;\n    return (\n      <>\n        <center>\n            <h1 id=\"heading\">Quiz App</h1>\n            {this.state.start ? null : <Welcome startquiz={this.startquiz} /> }\n            {this.state.quiz ? <Question item={quiz[index]} option={this.state.option} checkAnswer={this.checkAnswer} /> : null}\n            {this.state.next ? <button className=\"nextbtn btn btn-primary\" onClick={this.nextQuestion}>Next</button> : null}\n            {this.state.submit ? <button className=\"submitbtn btn btn-danger\" onClick={this.showresult} >Submit</button> : null}\n            {this.state.finish ? <Result score={this.state.score} reset={this.reset} /> : null}    \n        </center>\n      </>\n    );    \n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}